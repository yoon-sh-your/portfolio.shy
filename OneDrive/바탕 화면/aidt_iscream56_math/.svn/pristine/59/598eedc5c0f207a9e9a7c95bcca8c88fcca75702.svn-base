<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EMA526_06_IH_0005_s</title>

    <!-- 공통 js-->
    <script src="../../common_contents/common/js/app.js"></script>
    <script src="../../common_practice/common/js/solve_area_act.js"></script>

    <!-- 공통 css-->
    <link rel="stylesheet" href="./../../common_contents/common/css/app.css" />

    <!-- 개별 -->
    <link rel="stylesheet" href="./../../common_practice/common/css/app.css" />
    <link rel="stylesheet" href="./../../common_practice/css/ema526_06.css" />
  </head>

  <body>
    <div id="app_wrap" class="ema526_06_ih_0005">
      <section class="title type2">
        <h2 data-head="5" class="is_star2" lang="y">빨간색과 초록색으로 이루어진 회전판을 돌려 화살이 빨간색에 멈추면 경품에 당첨된다고 합니다. 경품에 당첨될 가능성이 높은 회전판이 되도록 색칠해 보세요.</h2>
      </section>

      <section class="contents">
        <div class="question_box">
          <div style="position: relative" id="pieChartContainer">
            <svg id="pieChart" viewBox="0 0 200 200" width="300" height="300"></svg>
            <div class="dropdown_wrap" data-index="0">
              <select class="custom_dropdown math_symbol" data-answer-single="empty_answer">
                <option value="">선택</option>
                <option value="1">빨강</option>
                <option value="2">초록</option>
              </select>
            </div>
            <div class="dropdown_wrap" data-index="1">
              <select class="custom_dropdown math_symbol" data-answer-single="empty_answer">
                <option value="">선택</option>
                <option value="1">빨강</option>
                <option value="2">초록</option>
              </select>
            </div>
            <div class="dropdown_wrap" data-index="2">
              <select class="custom_dropdown math_symbol" data-answer-single="empty_answer">
                <option value="">선택</option>
                <option value="1">빨강</option>
                <option value="2">초록</option>
              </select>
            </div>
            <div class="dropdown_wrap" data-index="3">
              <select class="custom_dropdown math_symbol" data-answer-single="empty_answer">
                <option value="">선택</option>
                <option value="1">빨강</option>
                <option value="2">초록</option>
              </select>
            </div>
            <div class="dropdown_wrap" data-index="4">
              <select class="custom_dropdown math_symbol" data-answer-single="empty_answer">
                <option value="">선택</option>
                <option value="1">빨강</option>
                <option value="2">초록</option>
              </select>
            </div>
          </div>

          <img src="../../common_practice/img/EMA526_06_IH/0005_img1.svg" alt="돌림판" class="point_img" />
        </div>

        <div class="solve_area">
          <div class="inner_solve">
            <div class="flex">
              <strong class="tit_solve" lang="y">해설</strong>
              <div class="conts_solve">
                <p lang="y">회전판에 빨간색 부분이 초록색 부분보다 더 넓게 되도록 색칠합니다.</p>
              </div>
            </div>
            <div class="buttons_solve">
              <!--  -->
            </div>
          </div>
        </div>

        <div class="btn_area">
          <button class="btnReset">리셋</button>
          <button class="btnCheck">확인</button>
        </div>
      </section>
    </div>
  </body>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      function createPieChart(targetId, slices = 5) {
        const svg = document.getElementById(targetId);
        const cx = 100,
          cy = 100,
          r = 100;
        const anglePerSlice = 360 / slices;

        function polarToCartesian(centerX, centerY, radius, angleInDegrees) {
          const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;
          return {
            x: centerX + radius * Math.cos(angleInRadians),
            y: centerY + radius * Math.sin(angleInRadians),
          };
        }

        for (let i = 0; i < slices; i++) {
          const startAngle = i * anglePerSlice;
          const endAngle = startAngle + anglePerSlice;
          const midAngle = startAngle + anglePerSlice / 2;

          const start = polarToCartesian(cx, cy, r, startAngle);
          const end = polarToCartesian(cx, cy, r, endAngle);
          const mid = polarToCartesian(cx, cy, 60, midAngle); // 드롭다운 위치용
          const largeArcFlag = anglePerSlice > 180 ? 1 : 0;

          const pathData = [`M ${cx},${cy}`, `L ${start.x},${start.y}`, `A ${r},${r} 0 ${largeArcFlag} 1 ${end.x},${end.y}`, `Z`].join(' ');

          const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
          path.setAttribute('d', pathData);
          path.setAttribute('class', 'slice');
          path.setAttribute('data-index', i);

          path.addEventListener('click', () => {
            const containerRect = document.getElementById('pieChartContainer').getBoundingClientRect();
            const svgRect = svg.getBoundingClientRect();

            // 모든 드롭다운 숨김
            document.querySelectorAll('.dropdown_wrap').forEach((dd) => {
              dd.style.display = 'none';
            });

            // 해당 드롭다운 위치 조정 후 표시
            const targetDropdown = document.querySelector(`.dropdown_wrap[data-index="${i}"]`);
            targetDropdown.style.left = `${svgRect.left - containerRect.left + mid.x}px`;
            targetDropdown.style.top = `${svgRect.top - containerRect.top + mid.y}px`;
            targetDropdown.style.display = 'block';
          });

          svg.appendChild(path);
        }
      }

      //드롭다운 선택 시 색상 적용
      document.querySelectorAll('.custom_dropdown').forEach((select) => {
        select.addEventListener('change', function () {
          const dropdown = this.closest('.dropdown_wrap');
          const index = dropdown.dataset.index;
          const path = document.querySelector(`.slice[data-index="${index}"]`);
          const slices = document.querySelectorAll('.slice');
          path.classList.remove('red', 'green');

          if (this.value === '1') path.classList.add('red');
          if (this.value === '2') path.classList.add('green');

          document.querySelector('.btnCheck').classList.add('active');
        });
      });
      // SVG 생성 실행
      createPieChart('pieChart', 5);
    });
    runAfterAppReady(() => {
      // 정답 조건 정의
      window.customCheckCondition = function () {
        // 현재 활성 페이지
        const slices = document.querySelectorAll('.slice');
        let red = 0,
          green = 0;
        slices.forEach((slice) => {
          if (slice.classList.contains('red')) red++;
          if (slice.classList.contains('green')) green++;
        });
        const solveArea = document.querySelector('.solve_area');
        if (red === 4 && green === 1) {
          if (solveArea) solveArea.classList.add('active');
          return true;
        } else {
          return false;
        }
      };
      // 두 번째 오답 시
      window.onIncorrectTwiceCustom = function () {
        const slices = document.querySelectorAll('.slice');
        slices.forEach((slice, index) => {
          // 초기화
          slice.classList.remove('red', 'green');

          if (index < 4) {
            slice.classList.add('red');
          } else {
            slice.classList.add('green');
          }
        });
        const dropdowns = document.querySelectorAll('.dropdown_wrap');
        dropdowns.forEach((dd) => {
          dd.style.display = 'none';
        });
      };
    });
  </script>
</html>
