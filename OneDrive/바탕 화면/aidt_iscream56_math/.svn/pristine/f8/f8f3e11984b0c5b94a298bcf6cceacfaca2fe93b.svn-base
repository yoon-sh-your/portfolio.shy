<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>EMA515_10_IH_0001_s</title>

        <!-- 공통 js-->
        <script src="../../common_contents/common/js/app.js"></script>
        <script src="../../common_practice/common/js/solve_area_act.js"></script>

        <!-- 공통 css-->
        <link rel="stylesheet" href="./../../common_contents/common/css/app.css" />

        <!-- 개별 -->
        <script src="../../common_practice/common/js/puzzle.js"></script>
        <script src="../../common_practice/common/js/practice_zoom.js"></script>
        <link rel="stylesheet" href="./../../common_practice/common/css/app.css" />
        <link rel="stylesheet" href="./../../common_practice/css/ema515_10.css" />
    </head>
    <body>
        <div id="app_wrap" class="ema515_10_ih_0001">
            <section class="title puzzle type2">
                <div class="puzzle_tit">
                    <span class="tag" lang="y">창의</span>
                    <span class="tit" lang="y">
                        <span class="emph">퍼즐</span>
                        <span class="txt1">로</span>
                        <span class="txt2">정리해요</span>
                    </span>
                </div>
                <h2 lang="y">계산을 하여 계산 결과를 따라가면 친구를 만날 수 있어요. <button type="button" class="btn_zoom" data-target="target1"></button></h2>
            </section>

            <section class="contents">
                <div class="flex justify_center">
                    <div class="map_area picture_wrap target1" data-head="" data-tit="">
                        <img src="../../common_practice/img/EMA515_10_IH/0001_map_svg.svg" class="map" alt="" />
                        <div class="text_group">
                            <!-- <span class="txt1" lang="y">출발</span>
                        <span class="txt2" lang="y">도착</span> -->
                        </div>
                        <svg width="695" height="650" viewBox="0 0 1389 1300" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                class="load1"
                                data-quiz="(1)/(4)+(1)/(8)"
                                data-left="(2)/(12)"
                                data-right="(3)/(8)"
                                data-true="(3)/(8)"
                                d="M323.396 208.695C361.729 242.195 468.696 283.795 589.896 182.195C636.396 153.695 683.396 122.195 854.896 138.695"
                                stroke="none"
                            />
                            <path
                                class="load2"
                                data-quiz="(2)/(3)+(3)/(5)"
                                data-left="1(4)/(15)"
                                data-right="1(2)/(25)"
                                data-true="1(4)/(15)"
                                d="M829.528 139.388C872.118 138.582 942.875 160.587 885.185 255.062C860.019 273.937 750.641 283.133 817.913 362.992C834.174 374.995 874.699 375.414 892.929 374.124"
                                stroke="none"
                            />
                            <path
                                class="load3"
                                data-quiz="1(1)/(2)+2(3)/(10)"
                                data-left="3(4)/(5)"
                                data-right="3(9)/(10)"
                                data-true="3(4)/(5)"
                                d="M892.928 374.124C955.361 356.539 1083.32 335.017 1095.71 389.612C1111.2 457.854 1079.74 499.961 1018.76 529C957.781 558.04 837.272 541.584 810.653 529C784.035 516.416 653.362 485.925 521.238 512.544L514.946 535.292"
                                stroke="none"
                            />
                            <path
                                class="load4"
                                data-quiz="(3)/(4)+(1)/(2)"
                                data-left="(1)/(2)"
                                data-right="(1)/(4)"
                                data-true="(1)/(4)"
                                d="M513.5 540.5C568.167 576.333 671.5 660.3 647.5 709.5C626 739 624 799 452.5 785C425 772 390.5 717.5 376.5 687C362.5 656.5 252.5 612.5 223 748.5C217.4 777.7 216 812 216 825.5"
                                stroke="none"
                            />
                            <path
                                class="load5"
                                data-quiz="4(1)/(4)+2(5)/(8)"
                                data-left="1(3)/(8)"
                                data-right="1(5)/(8)"
                                data-true="1(5)/(8)"
                                d="M218.271 825.688C215.528 899.415 269.959 1031.38 509.622 969.433C555.6 939.909 615.128 875.539 696.436 951.525"
                                stroke="none"
                            />
                            <path class="load6" d="M694.984 951.525C652.878 1006.38 601.093 1118.41 730.798 1127.7C892.928 1139.31 1014.89 1057.04 1154.27 1169.81" stroke="none" />
                            <image id="obj_move" href="../../common_practice/img/EMA515_10_IH/0001_obj1.png" x="170" y="110" width="150" height="108" />
                        </svg>

                        <span class="obj_arrival"><img src="../../common_practice/img/EMA515_10_IH/0001_obj2.png" alt="도착 이미지" /></span>
                    </div>
                </div>
                <div class="btn_area">
                    <button class="btnReset">리셋</button>
                </div>
            </section>

            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const obj = document.getElementById("obj_move");
                    const pathElements = document.querySelectorAll("svg path[class^='load']");
                    let currentPathIndex = 0;
                    let state = "ready"; // ready, moving, quiz

                    function moveAlongPath(pathEl) {
                        state = "moving";

                        const pathLength = pathEl.getTotalLength();
                        const speed = 200;
                        const duration = (pathLength / speed) * 1000;

                        const fps = 60;
                        const steps = Math.round(duration / (1000 / fps));
                        let step = 0;

                        const start = pathEl.getPointAtLength(0);
                        obj.setAttribute("x", start.x - obj.width.baseVal.value / 2);
                        obj.setAttribute("y", start.y - obj.height.baseVal.value / 2);
                        obj.setAttribute("transform", "scale(0.9)");

                        const interval = setInterval(() => {
                            const progress = step / steps;
                            const point = pathEl.getPointAtLength(progress * pathLength);

                            obj.setAttribute("x", point.x - obj.width.baseVal.value / 2);
                            obj.setAttribute("y", point.y - obj.height.baseVal.value / 2);

                            step++;

                            if (step > steps) {
                                clearInterval(interval);
                                state = "quiz"; // 이동 완료 후 퀴즈 대기
                            }
                        }, 1000 / fps);
                    }

                    function renderFractionHTML(str) {
                        return str
                            .split("+")
                            .map((part) => {
                                const mixedMatch = part.match(/^(\d+)\((\d+)\)\/\((\d+)\)$/);
                                const fractionMatch = part.match(/^\((\d+)\)\/\((\d+)\)$/);

                                if (mixedMatch) {
                                    return `
                                    <div class="fraction_box_wrap">
                                        <span>${mixedMatch[1]}</span>
                                        <div class="fraction_box">
                                            <span>${mixedMatch[2]}</span>
                                            <span>${mixedMatch[3]}</span>
                                        </div>
                                    </div>
                                `;
                                } else if (fractionMatch) {
                                    return `
                                    <div class="fraction_box">
                                        <span>${fractionMatch[1]}</span>
                                        <span>${fractionMatch[2]}</span>
                                    </div>
                                `;
                                } else {
                                    return `<span>${part}</span>`;
                                }
                            })
                            .join('<span class="operator">+</span>');
                    }

                    function showQuiz(pathEl) {
                        const quiz = pathEl.dataset.quiz;
                        const left = pathEl.dataset.left;
                        const right = pathEl.dataset.right;
                        const correct = pathEl.dataset.true;

                        const popArea = document.createElement("div");
                        popArea.className = "pop_area";
                        popArea.innerHTML = `
                        <div class="quiz_pop">
                            <button type="button" class="close" style="display: none;"></button>
                            <div class="inner_pop quiz${currentPathIndex + 1}">
                                <div class="txt_quiz">${renderFractionHTML(quiz)}</div>
                                <div class="question_box">
                                    <button type="button" class="left" data-answer-single="${left === correct}">
                                        ${renderFractionHTML(left)}
                                    </button>
                                    <div class="center">
                                        <img src="../../common_practice/img/EMA515_10_IH/0001_obj3.png" alt="">
                                    </div>
                                    <button type="button" class="right" data-answer-single="${right === correct}">
                                        ${renderFractionHTML(right)}
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;

                        document.querySelector(".contents")?.after(popArea);

                        const leftBtn = popArea.querySelector(".left");
                        const rightBtn = popArea.querySelector(".right");

                        leftBtn.addEventListener("click", checkAnswer);
                        rightBtn.addEventListener("click", checkAnswer);
                    }

                    function checkAnswer(e) {
                        const selected = e.currentTarget;
                        const isCorrect = selected.dataset.answerSingle === "true";

                        const quizPop = document.querySelector(".quiz_pop");

                        if (isCorrect) {
                            quizPop.classList.remove("error");
                            quizPop.classList.add("result");

                            const closeBtn = quizPop.querySelector(".close");
                            closeBtn.style.display = "block";

                            closeBtn.addEventListener("click", () => {
                                document.querySelector(".pop_area")?.remove();
                                currentPathIndex++;
                                if (currentPathIndex < pathElements.length) {
                                    moveAlongPath(pathElements[currentPathIndex]);
                                } else {
                                    document.querySelector(".map_area")?.classList.add("result");
                                    state = "done";
                                }
                            });
                        } else {
                            quizPop.classList.remove("result");
                            quizPop.classList.add("error");
                            setTimeout(() => {
                                quizPop.classList.remove("error");
                            }, 1000);
                        }
                    }

                    obj.addEventListener("click", () => {
                        if (state === "ready" && currentPathIndex < pathElements.length) {
                            moveAlongPath(pathElements[currentPathIndex]);
                        } else if (state === "quiz") {
                            showQuiz(pathElements[currentPathIndex]);
                        }
                    });
                });

                let objMoveClicked = false;

                document.getElementById("obj_move").addEventListener("click", function () {
                    objMoveClicked = true;
                });

                runAfterAppReady(() => {
                    defineButtonClassRules([
                        {
                            selector: "#obj_move",
                            key: "custom_reset_btn_active",
                            test: (el) => {
                                return objMoveClicked;
                            },
                        },
                    ]);
                });
            </script>
        </div>
    </body>
</html>
